//*****************************************************************************
// キューブクラス[Cube.h]
//*****************************************************************************
#pragma once

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "main.h"
#include "Interface/IDrawable.h"

//*****************************************************************************
// クラス宣言
//*****************************************************************************
class Cube : public IDrawable
{
public:
	//=============================================================================
	// デストラクタ
	//=============================================================================
	~Cube();

	//=============================================================================
	// インスタンス生成処理
	// pDevice : デバイス
	//=============================================================================
	static Cube* CreateInstance(ID3D11Device* pDevice);

	//=============================================================================
	// 終了処理
	//=============================================================================
	void Uninit(void);

	//=============================================================================
	// 更新処理
	//=============================================================================
	void Update(void);

	//=============================================================================
	// 描画処理
	// pContext : デバイスコンテキスト
	// pVertexShader : 頂点シェーダー
	// pPixelShader : ピクセルシェーダー
	// pLayout : 頂点レイアウト
	// pConstantBuffer : 定数バッファ
	// viewProjection : ビュープロジェクション行列
	//=============================================================================
	void Draw(ID3D11DeviceContext * pContext, ID3D11VertexShader * pVertexShader, ID3D11PixelShader * pPixelShader,
		ID3D11InputLayout * pLayout, ID3D11Buffer * pConstantBuffer, const XMMATRIX& viewProjection) override;

	//=============================================================================
	// ポジション設定処理
	// x : x座標
	// y : y座標
	// z : z座標
	//=============================================================================
	void SetPosition(float x, float y, float z);

private:
	//=============================================================================
	// コンストラクタ
	//=============================================================================
	Cube();

	//=============================================================================
	// 初期化処理
	// pDevice : デバイス
	//=============================================================================
	void Init(ID3D11Device* pDevice);

	//=============================================================================
	// 頂点バッファ生成処理
	// pDevice : デバイス
	//=============================================================================
	void CreateVertexBuffer(ID3D11Device* pDevice);

	ID3D11ShaderResourceView* _pShaderResView;
	ID3D11Buffer* _pVertexBuffer;
	XMFLOAT3 _position;
	XMFLOAT3 _rotation;
};